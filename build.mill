package build

import mill._
import scalalib._
import mill.define.ModuleRef

object cli extends ScalaModule with CustomNativeImageModule {
  def scalaVersion = "3.7.0"
  def mainClass = Some("ba.sake.flatmark.cli.Main")
  def moduleDeps = Seq(core)
  def ivyDeps = Agg(
    ivy"com.lihaoyi::mainargs:0.7.6"
  )

  def forkArgs = Seq[String](
    "-Dorg.jboss.logging.provider=jdk",
    // https://github.com/scala/scala3/issues/9013
    "--sun-misc-unsafe-memory-access=allow",
    // generate optimization file for graal-native
    "-agentlib:native-image-agent=config-output-dir=cli/resources/META-INF/native-image"
  )
}

object core extends ScalaModule {
  def scalaVersion = "3.7.0"
  def moduleDeps = Seq(ssr)
  def ivyDeps = Agg(
    ivy"com.lihaoyi::os-lib:0.11.4",
    ivy"org.commonmark:commonmark:0.24.0",
    ivy"org.commonmark:commonmark-ext-gfm-tables:0.24.0",
    ivy"org.commonmark:commonmark-ext-gfm-strikethrough:0.24.0",
    ivy"org.commonmark:commonmark-ext-autolink:0.24.0",
    ivy"org.commonmark:commonmark-ext-heading-anchor:0.24.0",
    ivy"org.commonmark:commonmark-ext-footnotes:0.24.0",
    ivy"org.commonmark:commonmark-ext-ins:0.24.0",
    ivy"org.commonmark:commonmark-ext-image-attributes:0.24.0",
    ivy"org.commonmark:commonmark-ext-task-list-items:0.24.0",
    ivy"io.pebbletemplates:pebble:3.2.4",
    ivy"org.virtuslab::scala-yaml:0.3.0",
    ivy"org.seleniumhq.selenium:selenium-chrome-driver:4.33.0",
    ivy"org.seleniumhq.selenium:selenium-support:4.33.0",
    ivy"org.slf4j:slf4j-jdk14:2.0.17"
  )
  /* def repositoriesTask = Task.Anon {
    super.repositoriesTask() ++ Seq(coursier.MavenRepository("https://jitpack.io"))
  }*/
}

object ssr extends ScalaModule {
  def scalaVersion = "3.7.0"
  def ivyDeps = Agg(
    ivy"ba.sake::sharaf-undertow:0.10.0",
    // https://github.com/wildfly/wildfly-common/issues/74
    ivy"org.wildfly.common:wildfly-common:1.7.0.Final"
  )
}

object ZincWorkerGraalvm extends JvmWorkerModule {
  def jvmId = "graalvm-community:24.0.1"
  def jvmIndexVersion = "latest.release"
}

trait CustomNativeImageModule extends NativeImageModule {
  def nativeImageOptions = Seq("--no-fallback", "--enable-url-protocols=http", "--initialize-at-build-time=org.wildfly.common.Substitutions")
  def zincWorker = ModuleRef(ZincWorkerGraalvm)

  def nativeImage2: T[PathRef] = Task {
    val dest = Task.dest
    val executableName = "native-executable"
    val args = nativeImageOptions() ++ Seq(
      "-cp",
      nativeImageClasspath().iterator.map(_.path).mkString(java.io.File.pathSeparator),
      finalMainClass(),
      (dest / executableName).toString()
    )
    os.write(dest / "native-executable-args.txt", args.mkString("\n"))
    os.proc(Seq(nativeImageTool().path.toString, "@native-executable-args.txt")).call(cwd = dest, stdout = os.Inherit)
    val ext = if (mill.main.client.Util.isWindows) ".exe" else ""
    val executable = dest / s"${executableName}${ext}"
    assert(os.exists(executable))
    PathRef(executable)
  }
}
